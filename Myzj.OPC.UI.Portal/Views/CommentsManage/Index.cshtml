@using Myzj.OPC.UI.Model.Base
@model Myzj.OPC.UI.Model.CommentsManage.CommentsManageRefer
@{
	ViewBag.Title = "评论管理";	
}
<style>
	.showDetailTable tr td:nth-child(2n+1) {
		width: 15%;
		text-align: right;
	}

	.showDetailTable tr td:nth-child(2n) {
		width: 35%;
	}
	.showDetailTable tr td input[type=text]{width: 200px;}

	#CommentDetail_Score,#CommentDetail_IsHighLight,#CommentDetail_HasPic,#CommentDetail_HasReComment,#CommentDetail_CheckState,#CommentDetail_HasReply,#CommentDetail_PeriodTimeType{
		width: 200px;
	}

	.showDetailTable .sBtn {
		width: 10%;
		height: 30px;
		margin-top: 10px;
		margin-bottom: 10px;
		cursor: pointer;
	}

</style>

<h2>评论管理</h2>

@using (Html.BeginForm())
{

    <table class="showDetailTable" style="width: 99%; margin: 5px auto;">
	<tbody>
	<tr>
		<td>会员号:</td>
		<td>
			<input type="text" name="CommentDetail.UserId" value="@Model.CommentDetail.UserId" placeholder="请输入会员号"/>
		</td>
		<td>会员昵称:</td>
		<td>
			<input type="text" name="CommentDetail.ShowNickName" value="@Model.CommentDetail.ShowNickName" placeholder="请输入会员昵称" />
		</td>
		
	</tr>
	<tr>
		<td>订单号:</td>
		<td>
			<input type="text" name="CommentDetail.OrderId" value="@Model.CommentDetail.OrderId" placeholder="请输入订单ID" />
		</td>
		<td>商品:</td>
		<td>
			<input type="text" name="CommentDetail.ProductCondition" value="@Model.CommentDetail.ProductCondition" placeholder="请输入商商品ID"/>
		</td>
	</tr>
	<tr>
		<td>评论内容:</td>
		<td>
			<input type="text" name="CommentDetail.ContentInfo" value="@Model.CommentDetail.ContentInfo" placeholder="请输入评论内容" />
		</td>
		<td>评分:</td>
		<td>
			@Html.DropDownListFor(m => m.CommentDetail.Score, new KvSelectList(typeof (AppEnum.ScoreLevel).GetEnumList()))
		</td>
		
	</tr>
	<tr>
		<td>是否精华:</td>
		<td>
			@Html.DropDownListFor(m => m.CommentDetail.IsHighLight, new KvSelectList(typeof(AppEnum.OppositeOpt).GetEnumList()))
		</td>
		<td>是否有图:</td>
		<td>
			@Html.DropDownListFor(m => m.CommentDetail.HasPic, new KvSelectList(typeof (AppEnum.OppositeOpt).GetEnumList()))
		</td>
	</tr>
	<tr>
		<td>是否追评:</td>
		<td>
			@Html.DropDownListFor(m => m.CommentDetail.HasReComment, new KvSelectList(typeof(AppEnum.OppositeOpt).GetEnumList()))
		</td>
		<td>审核状态:</td>
		<td>
			@Html.DropDownListFor(m => m.CommentDetail.CheckState, new KvSelectList(typeof (AppEnum.CheckState).GetEnumList()))
		</td>
	</tr>
	<tr>
		<td>审核人:</td>
		<td>
			<input type="text" name="CommentDetail.CheckUser" value="@Model.CommentDetail.CheckUser" placeholder="输入姓名" />
		</td>
		<td>是否回复:</td>
		<td>
			@Html.DropDownListFor(m => m.CommentDetail.HasReply, new KvSelectList(typeof (AppEnum.OppositeOpt).GetEnumList()))
		</td>
	</tr>
	<tr>
		<td>回复人:</td>
		<td colspan="3">
			<input type="text" name="CommentDetail.ReplyUser" value="@Model.CommentDetail.ReplyUser" placeholder="输入姓名" />
		</td>
	</tr>
	<tr>
		<td>时间段查询:</td>
		<td colspan="3">
			@{
	var selPeriodTimeType = new Dictionary<int, string>()
				{
					{1, "审核时间"},
					{2, "评论时间"},
					{3, "回复时间"}
				};
			}
			@Html.DropDownListFor(m => m.CommentDetail.PeriodTimeType, new KvSelectList(selPeriodTimeType))
			<input type="text" id="CommentDetail.StartTime" name="CommentDetail.StartTime" value="@Model.CommentDetail.StartTime" onfocus=" dateFmt(this, 1) " style="width: 188px;" />
			<label style="width: 10px; margin-left: 10px; line-height: 20px;">至</label>
			<input type="text" id="CommentDetail.EndTime" name="CommentDetail.EndTime" value="@Model.CommentDetail.EndTime" onfocus=" dateFmt(this, 2) " style="width: 188px;" />
		</td>
	</tr>
		<tr>
			<td colspan="4">
				<input style="margin-left: 25%" type="submit" value="查询" id="btnSearch" class="sBtn" />
				<input type="button" value="重置" class="sBtn" id="btnReset" onclick=" javascript: ResetForm(); "/>
				<input type="button" class="sBtn" value="刷商品缓存" onclick="RefreshCatch();" />
				<input type="button" class="sBtn" onclick=" ImportComment()" value="导入" />
				<input type="submit" class="sBtn" name="action:Export" value="导出" />
			</td>
		</tr>
	</tbody>
</table>

    @Html.Partial("CommentsManageItem", @Model.List)
    
    @Html.Partial("Pager", @Model)
}
<script type="text/javascript">
	var refreshIds = "";
	//获取url中的参数
	function getUrlParam(name) {
		var reg = new RegExp("(^|&)" + name + "=([^&]*)(&|$)"); //构造一个含有目标参数的正则表达式对象
		var r = window.location.search.substr(1).match(reg);  //匹配目标参数
		if (r != null) return unescape(r[2]); return null; //返回参数值
	}
	//重置表单
	function ResetForm() {
		var prtid = getUrlParam('prtid');
		if (prtid > 0) {
			window.location.href = '@Url.Action("Index", "CommentsManage")';
		} else {
			var obj = $(".showDetailTable input");
			for (var i = 0; i < obj.length; i++) {
				if (obj[i].type == "text") {
					obj[i].value = "";
				}
			}
			$(".showDetailTable select").each(function (i, n) {
				$(this).find("option").eq(0).attr("selected", 'selected');
			});
		}

	}
	//格式化开始时间与结束时间,开始时间小于结束时间
	function dateFmt(obj, type) {
		if (type == 1) {
			if (obj.value == "") {
				WdatePicker({ dateFmt: 'yyyy-MM-dd 00:00:00', maxDate: '#F{$dp.$D(\'CommentDetail.EndTime\',{s:-1})}' });
			} else {
				WdatePicker({ dateFmt: 'yyyy-MM-dd HH:mm:ss', maxDate: '#F{$dp.$D(\'CommentDetail.EndTime\',{s:-1})}' });
			}
		} else {
			if (obj.value == "") {
				WdatePicker({ dateFmt: 'yyyy-MM-dd 23:59:59', minDate: '#F{$dp.$D(\'CommentDetail.StartTime\',{d:0})}' });
			} else {
				WdatePicker({ dateFmt: 'yyyy-MM-dd HH:mm:ss', minDate: '#F{$dp.$D(\'CommentDetail.StartTime\',{d:0})}' });
			}
		}
	}
	//全选和反选
	var total=@ViewBag.Sum;
	var disabledlen = $("input[name=checkitem]:disabled").length;
	//全部已审
	if (disabledlen == total) {
		$("#CheckAll").prop("disabled", "disabled");
		$("#ChkBtn").prop("disabled", "disabled");
	} else {
		$("#CheckAll").removeAttr("disabled");
		$("#ChkBtn").removeAttr("disabled");
	}
	$("#CheckAll").click(function () {
		var flag = $("#CheckAll").is(":checked"); //判断全选按钮的状态
		$("input[name=checkitem]").not("input:disabled").prop("checked", flag);
	});

	function ImportComment() {
		$.psAlert("",0,{
			'modal': true,
			'overlay_close': false,
			'custom_class': 'dialog',
			'overlay_opacity': 0.5,
			'width': 600,
			'buttons': false,
			source: {
				'iframe': {
					'src': '@Url.Action("ImportCommnets", "CommentsManage")',
					'height': 200
				}
			},
			'onClose':  function(caption) {
				location.reload();
			}
		},"导入评论");
	}

	//用英文逗号替换英文分号、中英文逗号或者回车
	function ReplaceSeperator(mobiles) {
		var i;
		var result = "";
		var c;
		for (i = 0; i < mobiles.length; i++) {
			c = mobiles.substr(i, 1);
			if (c == ";" || c == "," || c == "，" || c == "\n")
				result = result + ",";
			else if (c != "\r")
				result = result + c;
		}
		return result;
	}
	//刷新商品缓存
	var refreshdiv = '<div styel="width:400px,height:300px"><textarea id="refreshid" cols="38"></textarea><span style="font-size:12px">请输入要刷新缓存的商品Id,多个商品Id用逗号分割</span></div>';
	function RefreshCatch() {
		$.psAlert(refreshdiv,0,{'buttons':  [
			{caption: '提交', callback: function() {
				refreshIds = ReplaceSeperator($("#refreshid").val());
				if (refreshIds.length > 0) {
					//TryRefresh();
					alert("OK");
				} else {
					$.psAlert('请输入商品Id！',2);
				}
			}},
			{caption: '取消', callback: function() { }}
		]},"刷新缓存");
	}
	@*function TryRefresh() {
		$.ajax({
			url: '@Url.Action("RefreshProducts", "CommentsManage")',
			type: 'post',
			dataType: 'json',
			contentType: 'application/json',
			data: JSON.stringify({refreshIds: refreshIds }),
			success: function(result) {
				if (result.DoFlag) {
					$.psAlert(result.DoResult, 3);
				} 
			},
			error: function(data) {
				$.psAlert(data.responseText, 1);
			}
		});
	}*@
</script>
